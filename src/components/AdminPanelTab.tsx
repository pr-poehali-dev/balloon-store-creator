import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

const AdminPanelTab = () => {
  return (
    <>
      <div className="text-center mb-12">
        <h2 className="text-4xl font-bold mb-4 bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent">
          –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        </h2>
        <p className="text-lg text-gray-700 max-w-2xl mx-auto">
          –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —Å–∞–π—Ç–æ–º –∏ –∑–∞–∫–∞–∑–∞–º–∏ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ üìä
        </p>
      </div>
      
      <div className="grid lg:grid-cols-2 gap-8 mb-12">
        <Card className="bg-white/70 backdrop-blur-sm border-pink-200">
          <CardHeader>
            <CardTitle className="flex items-center gap-3">
              <Icon name="BarChart3" className="text-pink-600" size={24} />
              –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="flex justify-between items-center">
                <span>–ó–∞–∫–∞–∑—ã –∑–∞ –º–µ—Å—è—Ü</span>
                <Badge className="bg-green-100 text-green-700">+23% ‚Üó</Badge>
              </div>
              <div className="w-full bg-pink-100 rounded-full h-3">
                <div className="bg-gradient-to-r from-pink-500 to-purple-600 h-3 rounded-full" style={{width: '73%'}}></div>
              </div>
              <div className="grid grid-cols-3 gap-4 text-center">
                <div>
                  <div className="text-2xl font-bold text-gray-900">847</div>
                  <div className="text-xs text-gray-600">–ó–∞–∫–∞–∑–æ–≤</div>
                </div>
                <div>
                  <div className="text-2xl font-bold text-gray-900">2.1M</div>
                  <div className="text-xs text-gray-600">–í—ã—Ä—É—á–∫–∞</div>
                </div>
                <div>
                  <div className="text-2xl font-bold text-gray-900">4.8</div>
                  <div className="text-xs text-gray-600">–†–µ–π—Ç–∏–Ω–≥</div>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-white/70 backdrop-blur-sm border-pink-200">
          <CardHeader>
            <CardTitle className="flex items-center gap-3">
              <Icon name="ShoppingBag" className="text-purple-600" size={24} />
              –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="flex gap-2">
                <Button size="sm" className="flex-1 bg-gradient-to-r from-pink-500 to-purple-600">
                  <Icon name="Plus" size={16} />
                  –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
                </Button>
                <Button size="sm" variant="outline" className="border-pink-300">
                  <Icon name="Upload" size={16} />
                  Excel
                </Button>
              </div>
              <div className="space-y-2">
                {['–®–∞—Ä—ã –¥–ª—è –¥–µ–≤–æ—á–µ–∫', '–§–æ—Ç–æ–∑–æ–Ω—ã', '–ù–∞ –≤—ã–ø–∏—Å–∫—É'].map((cat, index) => (
                  <div key={index} className="flex justify-between items-center p-3 bg-pink-50 rounded-lg">
                    <span className="text-sm font-medium">{cat}</span>
                    <Badge variant="outline">{Math.floor(Math.random() * 50) + 10} —Ç–æ–≤–∞—Ä–æ–≤</Badge>
                  </div>
                ))}
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      <div className="grid md:grid-cols-3 gap-6">
        {[
          { title: '–ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤', desc: '–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ –æ–¥–Ω–æ–º—É –∏–ª–∏ —Ñ–∞–π–ª–æ–º Excel/YML', icon: 'Upload', color: 'from-blue-400 to-blue-600' },
          { title: '–ê–≤—Ç–æ–ª–æ–≥–æ—Ç–∏–ø—ã –Ω–∞ —Ñ–æ—Ç–æ', desc: '–õ–æ–≥–æ—Ç–∏–ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –≤—Å–µ —Ñ–æ—Ç–æ –∫–∞—Ç–∞–ª–æ–≥–∞', icon: 'Image', color: 'from-green-400 to-green-600' },
          { title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏', desc: '–°—Ç–∞—Ç—É—Å—ã, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –∏—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π', icon: 'ClipboardList', color: 'from-purple-400 to-purple-600' }
        ].map((feature, index) => (
          <Card key={index} className="bg-white/70 backdrop-blur-sm border-pink-200 hover:shadow-lg transition-all duration-300 group hover:scale-105">
            <CardContent className="pt-6 text-center">
              <div className={`w-16 h-16 bg-gradient-to-r ${feature.color} rounded-full flex items-center justify-center mb-4 mx-auto group-hover:scale-110 transition-transform`}>
                <Icon name={feature.icon} className="text-white" size={28} />
              </div>
              <h3 className="text-lg font-semibold mb-2 text-gray-900">{feature.title}</h3>
              <p className="text-gray-600 text-sm">{feature.desc}</p>
            </CardContent>
          </Card>
        ))}
      </div>
    </>
  );
};

export default AdminPanelTab;