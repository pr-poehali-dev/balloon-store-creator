import React, { useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import Header from '@/components/Header';
import Footer from '@/components/Footer';

interface Template {
  id: string;
  name: string;
  description: string;
  preview: string;
  category: string;
  features: string[];
  price: 'free' | 'premium';
  popularity: number;
}

const TemplateSelector = () => {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedTemplate, setSelectedTemplate] = useState<string | null>(null);

  const categories = [
    { id: 'all', name: '–í—Å–µ —à–∞–±–ª–æ–Ω—ã', icon: 'Layout' },
    { id: 'business', name: '–î–ª—è –±–∏–∑–Ω–µ—Å–∞', icon: 'Building2' },
    { id: 'portfolio', name: '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ', icon: 'User' },
    { id: 'shop', name: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω', icon: 'ShoppingCart' },
    { id: 'blog', name: '–ë–ª–æ–≥', icon: 'FileText' },
    { id: 'landing', name: '–õ–µ–Ω–¥–∏–Ω–≥', icon: 'Zap' }
  ];

  const templates: Template[] = [
    {
      id: 'balloon-dreams',
      name: 'Balloon Dreams',
      description: '–í–æ–ª—à–µ–±–Ω—ã–π —Å–∞–π—Ç –¥–ª—è —Å—Ç—É–¥–∏–∏ –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤ —Å —è—Ä–∫–∏–º–∏ —Ü–≤–µ—Ç–∞–º–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏',
      preview: 'üéà',
      category: 'business',
      features: ['–ì–∞–ª–µ—Ä–µ—è —Ä–∞–±–æ—Ç', '–§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞', '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω—ã', 'Instagram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è'],
      price: 'free',
      popularity: 98
    },
    {
      id: 'party-magic',
      name: 'Party Magic',
      description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –ø—Ä–µ–º–∏—É–º-—Å—Ç—É–¥–∏–∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –¥–µ–∫–æ—Ä–∞',
      preview: '‚ú®',
      category: 'business',
      features: ['–ü—Ä–µ–º–∏—É–º –¥–∏–∑–∞–π–Ω', '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–Ω–ª–∞–π–Ω', 'CRM —Å–∏—Å—Ç–µ–º–∞', '3D –≥–∞–ª–µ—Ä–µ—è'],
      price: 'premium',
      popularity: 92
    },
    {
      id: 'creative-balloons',
      name: 'Creative Balloons',
      description: '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏',
      preview: 'üé®',
      category: 'portfolio',
      features: ['–§–æ—Ç–æ –≥–∞–ª–µ—Ä–µ—è', '–í–∏–¥–µ–æ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏', '–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤', '–°–æ—Ü. —Å–µ—Ç–∏'],
      price: 'free',
      popularity: 85
    },
    {
      id: 'balloon-shop',
      name: 'Balloon Shop',
      description: '–ì–æ—Ç–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤ —Å –∫–æ—Ä–∑–∏–Ω–æ–π –∏ –æ–ø–ª–∞—Ç–æ–π',
      preview: 'üõí',
      category: 'shop',
      features: ['–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫', '–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞', '–î–æ—Å—Ç–∞–≤–∫–∞', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏'],
      price: 'premium',
      popularity: 89
    },
    {
      id: 'balloon-blog',
      name: 'Balloon Blog',
      description: '–°—Ç–∏–ª—å–Ω—ã–π –±–ª–æ–≥ –æ –¥–µ–∫–æ—Ä–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞—Ö —Å —Å–æ–≤–µ—Ç–∞–º–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤',
      preview: 'üìù',
      category: 'blog',
      features: ['–°–∏—Å—Ç–µ–º–∞ –±–ª–æ–≥–∞', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏', 'SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è', '–ü–æ–¥–ø–∏—Å–∫–∏'],
      price: 'free',
      popularity: 76
    },
    {
      id: 'party-landing',
      name: 'Party Landing',
      description: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–æ–∫',
      preview: 'üéØ',
      category: 'landing',
      features: ['–§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏', '–¢–∞–π–º–µ—Ä –∞–∫—Ü–∏–π', '–û—Ç–∑—ã–≤—ã', '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä'],
      price: 'free',
      popularity: 94
    }
  ];

  const filteredTemplates = selectedCategory === 'all' 
    ? templates 
    : templates.filter(t => t.category === selectedCategory);

  const handleTemplateSelect = (templateId: string) => {
    setSelectedTemplate(templateId);
  };

  const handleCreateSite = () => {
    if (selectedTemplate) {
      console.log('Creating site with template:', selectedTemplate);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-yellow-50">
      <Header />
      
      <main className="container mx-auto px-6 py-8">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="inline-block p-2 bg-gradient-to-r from-pink-100 to-purple-100 rounded-full mb-6">
            <Badge className="bg-gradient-to-r from-pink-500 to-purple-600 text-white px-4 py-2">
              üé® –í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∑–∞–π–Ω —Å–≤–æ–µ–π –º–µ—á—Ç—ã
            </Badge>
          </div>
          <h1 className="text-4xl md:text-6xl font-bold mb-4 bg-gradient-to-r from-pink-600 via-purple-600 to-indigo-600 bg-clip-text text-transparent">
            –®–∞–±–ª–æ–Ω—ã —Å–∞–π—Ç–æ–≤
          </h1>
          <p className="text-lg text-gray-700 max-w-2xl mx-auto">
            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥–æ—Ç–æ–≤—ã–µ –¥–∏–∑–∞–π–Ω—ã –¥–ª—è —Å—Ç—É–¥–∏–π –≤–æ–∑–¥—É—à–Ω—ã—Ö —à–∞—Ä–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–π —Å–∞–π—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!
          </p>
        </div>

        {/* Categories */}
        <div className="flex flex-wrap justify-center gap-4 mb-8">
          {categories.map((category) => (
            <Button
              key={category.id}
              variant={selectedCategory === category.id ? "default" : "outline"}
              className={`gap-2 ${
                selectedCategory === category.id 
                  ? "bg-gradient-to-r from-pink-500 to-purple-600 text-white" 
                  : "border-pink-300 hover:bg-pink-50"
              }`}
              onClick={() => setSelectedCategory(category.id)}
            >
              <Icon name={category.icon} size={16} />
              {category.name}
            </Button>
          ))}
        </div>

        {/* Templates Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
          {filteredTemplates.map((template) => (
            <Card 
              key={template.id}
              className={`cursor-pointer transition-all duration-300 hover:shadow-xl hover:scale-105 ${
                selectedTemplate === template.id 
                  ? "ring-4 ring-pink-400 bg-pink-50" 
                  : "bg-white/70 backdrop-blur-sm border-pink-200"
              }`}
              onClick={() => handleTemplateSelect(template.id)}
            >
              <CardContent className="p-6">
                {/* Preview */}
                <div className="bg-gradient-to-br from-pink-100 to-purple-100 rounded-lg h-48 flex items-center justify-center mb-6 text-6xl">
                  {template.preview}
                </div>
                
                {/* Header */}
                <div className="flex items-start justify-between mb-3">
                  <h3 className="font-bold text-lg text-gray-900">{template.name}</h3>
                  <div className="flex items-center gap-2">
                    {template.price === 'premium' ? (
                      <Badge className="bg-yellow-100 text-yellow-700">Premium</Badge>
                    ) : (
                      <Badge className="bg-green-100 text-green-700">Free</Badge>
                    )}
                    <div className="flex items-center gap-1">
                      <Icon name="Heart" className="text-pink-500" size={14} />
                      <span className="text-sm text-gray-600">{template.popularity}%</span>
                    </div>
                  </div>
                </div>

                {/* Description */}
                <p className="text-gray-600 text-sm mb-4 leading-relaxed">{template.description}</p>

                {/* Features */}
                <div className="space-y-2">
                  {template.features.slice(0, 3).map((feature, index) => (
                    <div key={index} className="flex items-center gap-2 text-sm text-gray-700">
                      <Icon name="Check" className="text-green-600" size={14} />
                      {feature}
                    </div>
                  ))}
                  {template.features.length > 3 && (
                    <div className="text-xs text-gray-500">
                      +{template.features.length - 3} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
                    </div>
                  )}
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Action Button */}
        {selectedTemplate && (
          <div className="fixed bottom-8 left-1/2 transform -translate-x-1/2 z-50">
            <Card className="bg-white shadow-2xl border-pink-200">
              <CardContent className="p-6 flex items-center gap-6">
                <div className="flex items-center gap-3">
                  <div className="text-2xl">
                    {templates.find(t => t.id === selectedTemplate)?.preview}
                  </div>
                  <div>
                    <h4 className="font-bold text-gray-900">
                      {templates.find(t => t.id === selectedTemplate)?.name}
                    </h4>
                    <p className="text-sm text-gray-600">–®–∞–±–ª–æ–Ω –≤—ã–±—Ä–∞–Ω</p>
                  </div>
                </div>
                <Button 
                  size="lg" 
                  className="bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white px-8 py-3 gap-3"
                  onClick={handleCreateSite}
                >
                  <Icon name="Sparkles" size={20} />
                  –°–æ–∑–¥–∞—Ç—å —Å–∞–π—Ç
                </Button>
              </CardContent>
            </Card>
          </div>
        )}
      </main>

      <Footer />
    </div>
  );
};

export default TemplateSelector;